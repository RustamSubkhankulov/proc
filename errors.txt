DEF_ERR(100, STK_INVALSIZE, 
Invalid size of the stack)

DEF_ERR(101, STK_NO_MEM,
Can not find free memory)

DEF_ERR(102, STK_OVRFLW,
Max capacity of stack was reached)

DEF_ERR(103, STK_UNDFLW,
Stack is empty)

DEF_ERR(104, STK_NO_ELEMS_PUSHED, 
No elements have been pushed to the stack)

DEF_ERR(105, STK_INV_NEW_SIZE,
Invalid new size in stack_set_size)

DEF_ERR(106, STK_CTOR_UNPREPARED,
Stack is not prepared for stack constructor)

DEF_ERR(107, STK_SZ_LESS_CT, 
New size of stack in 'stack_resize' can not be less than number of elements in it)

DEF_ERR(108, STK_UNKNOWN_RESZ_PARAM,
Unknown resize parameter)

DEF_ERR(109, STK_INV_SZ_ELEM,
Invalid size of elem_t)

DEF_ERR(110, STK_INV_CAPACITY,
Invalid capacity of the stack)

DEF_ERR(111, STK_INV_ELEM_CT,
Invalid number of elements in stack)

DEF_ERR(112, STK_CAPACITY_LESS_CT,
Stack: capacity can not be less than number of elements in it)

DEF_ERR(113, STK_INV_FREE_DATA,
Stack: free data for elements is not valid. Every element in free data must equal 0)

DEF_ERR(114, STK_INV_DATA_PTR, 
Invalid data pointer is stuck structure)

DEF_ERR(115, STK_POISON_CHECK,
Stack poison check failed)

DEF_ERR(116, STK_EMPTY_CHECK,
Stack empty check failed)

DEF_ERR(117, STK_CANARY1_ERR,
Left canary protection has fallen. Save yourself if you can)

DEF_ERR(118, STK_CANARY2_ERR,
Right canary protection has fallen. Save yourself if you can)

DEF_ERR(119, STK_DATA_CANARY1_ERR,
Left data canary protection has fallen. Save yourself if you can)

DEF_ERR(120, STK_DATA_CANARY2_ERR,
Right data canary protection has fallen. Save yourself if you can)

DEF_ERR(121, STK_INV_ORIG_FUNC,
Invalid stack origin function name)

DEF_ERR(122, STK_INV_ORIG_FILE,
Invalid stack origin file name)

DEF_ERR(123, STK_INV_ORIG_LINE,
Invalid stack origin line number)

DEF_ERR(124, STK_INV_SELF_PTR,
Invalid stack self pointer)

DEF_ERR(125, STK_BASE_HASH_ERR,
Invalid stack base hash)

DEF_ERR(126, STK_DATA_HASH_ERR,
Invalid stack data hash)


DEF_ERR(200, INV_FILE_NAME,
Invalid file name)

DEF_ERR(201, FOPEN_ERROR,
File can not be opened)

DEF_ERR(202, FILE_OUTPUT_ERROR,
File output error)

DEF_ERR(203, CLEAR_MEM_CHECK_ERR,
Memory cleanliness check is failed)

DEF_ERR(204, INV_ERROR_CODE,
Invalid error code)

DEF_ERR(205, INV_STACK_PTR,
Invalid stack pointer)

DEF_ERR(206, RECALLOC_INV_NUM_OF_ELEMS,
Invalid unmber of elements argument in recalloc)

DEF_ERR(207, RECALLOC_INV_POINTER,
Invalid pointer in recalloc argumnet)

DEF_ERR(208, RECALLOC_INV_SIZE_OF_ELEM,
Invalid size of element in recalloc argument)

DEF_ERR(209, CANNOT_ALLOCATE_MEM,
Memory allocation error)


DEF_ERR(301, TEXT_PROCESSING_ERR,
Error during text processing)

DEF_ERR(302, INV_TEXT_PTR,
Invalid text structure pointer)

DEF_ERR(303, EMPTY_OPER_NAME,
Empty operation name)

DEF_ERR(304, FWRITE_ERR,
Fwrite error)

DEF_ERR(305, INV_INSTRUCTION_STR,
Invalid instruction string in text structure)

DEF_ERR(306, CODE_FILE_SIZE_ERR,
Size of binary code file after assembling is incorrect)

DEF_ERR(307, EMPTY_OPERNAMEBUF,
Empty operation name buffer)

DEF_ERR(308, INV_PROCSTRUCT_PTR,
Invalid performstruct structure pointer)

DEF_ERR(309, FREAD_ERR,
Fread returning value is not equal to size of file)

DEF_ERR(310, LABEL_NAME_TOO_THICK,
Label name is too big. Consider increasing LABEL_NAME_SIZE in processor_general.h)

DEF_ERR(311, REPEATING_LABELS,
Label is repeating. Consider renaming one of the repeating labels)

DEF_ERR(312, INV_DESTINATION_OF_JMP,
Invalid destination ip in jump command)

DEF_ERR(313, NO_LABEL_FOR_JUMP,
No label founded for jump destination)

DEF_ERR(314, INV_LABEL_DEFINITION,
Invalid label definition)

DEF_ERR(315, NO_COMMAND_IN_STRING,
Invalid instruction string(no commands in string))

DEF_ERR(316, CANNOT_ADD_NEW_LABEL,
Error: can not add new label)

DEF_ERR(317, INV_STRING_NUMBER,
Number of string is lower than zero or more than number of strings)

DEF_ERR(318, INV_ASMSTRUCT_PTR,
Null pointer to the assembler structure)

DEF_ERR(319, ASMSTRUCT_INV_PTR,
Null pointer to the assembler structure)

DEF_ERR(320, ASMSTRUCT_EMPTY_CODE_ARR,
Empty code array in assembler structure)

DEF_ERR(323, ASMSTRUCT_INV_IP,
Invalid instruction pointer in code array)


DEF_ERR(401, HDR_INV_SIGN,
Invalid signature in header of code file)

DEF_ERR(402, HDR_INV_VERSION,
Versions of processor and assembled code are not equal)

DEF_ERR(403, HDR_INV_FILE_SIZE,
Size of code file in header and real size are not equal)

DEF_ERR(404, HDR_INV_CMD_NUMBERS,
Invalid command numbers in header of code file)

DEF_ERR(405, INV_FILE_PTR,
Invalid FILE* pointer)

DEF_ERR(406, INV_HDR_PTR,
Invalid header structure pointer)

DEF_ERR(407, FCLOSE_ERR,
File can not be closed)

DEF_ERR(408, TEXT_NO_STRINGS,
No strings in text structure)

DEF_ERR(409, NULL_STRING_TEXT,
Null string in text structure)

DEF_ERR(410, LOG_REPORT_PARAMS_ERR,
Invalid arguments in log_report)


DEF_ERR(501, INV_CODE_ARRAY_PTR,
Invalid pointer to the code array in procstruct structure)

DEF_ERR(502, PROC_INV_IP,
Invalid instruction pointer (pointing to the outside of code array))

DEF_ERR(503, PROC_INV_OPER_CODE,
Invalid operation code in procstruct->code_array)

DEF_ERR(504, PROC_DIV_BY_ZERO,
Processor error: number cannot be divided by zero)

DEF_ERR(505, FILE_INPUT_ERR,
File input error)

DEF_ERR(506, INV_INSTR_PTR,
Instruction pointer do not point at the right place at the end of processing code array)

DEF_ERR(507, NULL_STRING,
Null string)

DEF_ERR(508, INV_REGISTER_NUMBER,
Number of register is lower than zero or higher than number of registers available)

DEF_ERR(510, RAM_INV_ADDRESS,
Invalid ram address (number of element is more than ram capacity))

DEF_ERR(511, INV_ARGUMENT_NUMBER,
Number of register is lower than zero or higher than number of registers available)

DEF_ERR(512, INV_RAM_NUMBER,
Number of register is lower than zero or higher than number of registers available)

DEF_ERR(513, STACK_PROC_ERROR,
Error occured with stack during executing)

DEF_ERR(514, PROC_INVALID_CMND,
Incorrect command in code array)


DEF_ERR(601, INV_DISASMSTRUCT_PTR,
Invalid disasmstruct structure pointer)

DEF_ERR(602, DISASM_INV_OPER_CODE,
Invalid operation code in code array during disassembling)